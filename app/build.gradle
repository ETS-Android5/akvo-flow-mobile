apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    mavenCentral()
    jcenter()
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def versionMajor = versionProps['VERSION_MAJOR'].toString()
        def versionMinor = versionProps['VERSION_MINOR'].toString()
        def versionPatch = versionProps['VERSION_PATCH'].toString()
        def versionCodeProperty = versionProps['VERSION_CODE'].toInteger()

        defaultConfig {
            versionCode versionCodeProperty
            versionName "${versionMajor}.${versionMinor}.${versionPatch}"
            minSdkVersion rootProject.ext.minSdkVersion
            targetSdkVersion rootProject.ext.targetSdkVersion
            applicationId "org.akvo.flow"
            testApplicationId "org.akvo.flow.tests"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            testHandleProfiling true
            testFunctionalTest true
            vectorDrawables.useSupportLibrary = true
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        signingConfigs {

            debug {
                keyAlias 'androiddebugkey'
                keyPassword 'android'
                storeFile file('debug-key/debug.keystore')
                storePassword 'android'
            }

            flowRelease {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
            buildTypes {
                release {
                    signingConfig signingConfigs.flowRelease
                }
            }
        }
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
            exclude '.readme'
        }

        productFlavors {
            flow {
            }
            biogas {
            }
            cookstoves {
            }
        }



        testOptions {
            unitTests.returnDefaultValues = true
        }

        lintOptions {
            // set to true to turn off analysis progress reporting by lint
            quiet false
            // if true, stop the gradle build if errors are found
            abortOnError false
            // if true, only report errors
            ignoreWarnings false
            lintConfig file('lint.xml')
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    sourceSets {
        biogas.res.srcDirs = ['src/snv/res', 'src/biogas/res']
        cookstoves.res.srcDirs = ['src/snv/res', 'src/cookstoves/res']
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.outputFile = file("bin/flow.apk")
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.google.android.gms:play-services-base:$rootProject.ext.playServicesVersion"
    compile "com.google.android.gms:play-services-maps:$rootProject.ext.playServicesVersion"
    compile "com.google.android.gms:play-services-gcm:$rootProject.ext.playServicesVersion"
    compile "org.ocpsoft.prettytime:prettytime:$rootProject.ext.prettyTimeVersion"
    compile "com.google.maps.android:android-maps-utils:$rootProject.ext.mapsUtilsVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$rootProject.ext.jacksonDataBindVersion"
    compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    compile "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    apt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    compile "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
    apt "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion"
    compile "com.getsentry.raven:raven-android:$rootProject.ext.ravenVersion"
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    compile "com.squareup.sqlbrite2:sqlbrite:$rootProject.ext.sqlbriteVersion"

    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.ext.mockitoCoreVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockVersion"
    testCompile "org.powermock:powermock-module-junit4-rule:$rootProject.ext.powerMockVersion"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockVersion"
    testCompile "org.powermock:powermock-classloading-xstream:$rootProject.ext.powerMockVersion"

    androidTestCompile "com.google.dexmaker:dexmaker:$rootProject.ext.dexMakerVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$rootProject.ext.dexMakerVersion"
    androidTestCompile ("com.android.support.test:rules:$rootProject.ext.rulesVersion") {
        exclude module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile ("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoCoreVersion") {
        exclude module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile ("com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoContribVersion") {
        exclude module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    compile project(':domain')
    compile project(':data')
    compile project(path: ':database')
}
